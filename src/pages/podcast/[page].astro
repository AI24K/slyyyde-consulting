---
import Layout from '../../layouts/Layout.astro';

import { type CollectionEntry, getCollection } from 'astro:content';

import '../../css/podcast.css'

export async function getStaticPaths({ paginate }) {

const episodes = (await getCollection('podcast')).sort((a, b) => {
    if (a.data.episodeNumber !== undefined && b.data.episodeNumber !== undefined) {
        return b.data.episodeNumber - a.data.episodeNumber;
    } else if (a.data.episodeNumber !== undefined) {
        return 1;
    } else if (b.data.episodeNumber !== undefined) {
        return -1;
    } else {
        return b.data.title.localeCompare(a.data.title);
    }
});

  return paginate(episodes, { pageSize: 9 })
}

const { page } = Astro.props;

interface Props {
  page?: {
    url?: {
      next?: string;
      prev?: string;
    };
    data?: any;
    lastPage?: number;
    currentPage?: number;
  };
}

import BackBt from '../../components/BackBt.astro';

import { Schema } from "astro-seo-schema"
import NewsletterForm from '../../components/NewsletterForm.astro';
---

<Layout title={`Page ${page.currentPage} | psAI Podcast`}>
	<BackBt url={`/podcast/`} label="Return"/>

	<main class="ep_catalogue">
		<section class="category_episode_ctnr center_base_width">
			<h1 class="counter_title"><sup>The psAI</sup> <span>Podcast</span><sub>Page {page.currentPage}</sub></h1>
	
			<ul>
				{
					page.data.map((episode) => (
						<>
                        <li id={(episode.data.title).toLowerCase().replace(/\s+/g, '-')} class="scroll_margin_top">
							<a href={`/podcast/${episode.slug}/`} class="ctnr">
								<div class="content">
                                    <div class="ctnr">
                                        <div class="cover">
                                            <img src={episode.data.cover} alt="Episode cover" loading="lazy"/>
                                        </div>

										<h3 class="title">Episode {episode.data.episodeNumber}</h3>

                                        {episode.data.description ? (
                                            <p class="description">{episode.data.description}</p>
                                        ) : null}

                                        <div class="watch">Watch Now</div>
                                    </div>
                                </div>
							</a>
                        </li>
						</>
					))
				}
			</ul>
			
			<div class="blog_nav">
				<div class="flex">
					{page.url.prev ? <a href={page.url.prev}>Previous</a> : <a href={page.url.prev} class="disabled">Previous</a>}
					
					<span class="counter">{page.currentPage} of {page.lastPage}</span>
		
					{page.url.next ? <a href={page.url.next}>Next</a> : <a href={page.url.next} class="disabled">Next</a>}
				</div>
			</div>

			<NewsletterForm/>
		</section>
	</main>
</Layout>